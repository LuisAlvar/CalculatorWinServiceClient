//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalculatorService_Proxy.TcpService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TcpService.ICalculatorServiceSvc")]
    public interface ICalculatorServiceSvc {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorServiceSvc/HeartBeat", ReplyAction="http://tempuri.org/ICalculatorServiceSvc/HeartBeatResponse")]
        string HeartBeat();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorServiceSvc/HeartBeat", ReplyAction="http://tempuri.org/ICalculatorServiceSvc/HeartBeatResponse")]
        System.Threading.Tasks.Task<string> HeartBeatAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorServiceSvc/Add", ReplyAction="http://tempuri.org/ICalculatorServiceSvc/AddResponse")]
        double Add(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorServiceSvc/Add", ReplyAction="http://tempuri.org/ICalculatorServiceSvc/AddResponse")]
        System.Threading.Tasks.Task<double> AddAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorServiceSvc/Subtract", ReplyAction="http://tempuri.org/ICalculatorServiceSvc/SubtractResponse")]
        double Subtract(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorServiceSvc/Subtract", ReplyAction="http://tempuri.org/ICalculatorServiceSvc/SubtractResponse")]
        System.Threading.Tasks.Task<double> SubtractAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorServiceSvc/Multiply", ReplyAction="http://tempuri.org/ICalculatorServiceSvc/MultiplyResponse")]
        double Multiply(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorServiceSvc/Multiply", ReplyAction="http://tempuri.org/ICalculatorServiceSvc/MultiplyResponse")]
        System.Threading.Tasks.Task<double> MultiplyAsync(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorServiceSvc/Divide", ReplyAction="http://tempuri.org/ICalculatorServiceSvc/DivideResponse")]
        double Divide(double n1, double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorServiceSvc/Divide", ReplyAction="http://tempuri.org/ICalculatorServiceSvc/DivideResponse")]
        System.Threading.Tasks.Task<double> DivideAsync(double n1, double n2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorServiceSvcChannel : CalculatorService_Proxy.TcpService.ICalculatorServiceSvc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorServiceSvcClient : System.ServiceModel.ClientBase<CalculatorService_Proxy.TcpService.ICalculatorServiceSvc>, CalculatorService_Proxy.TcpService.ICalculatorServiceSvc {
        
        public CalculatorServiceSvcClient() {
        }
        
        public CalculatorServiceSvcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorServiceSvcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorServiceSvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorServiceSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HeartBeat() {
            return base.Channel.HeartBeat();
        }
        
        public System.Threading.Tasks.Task<string> HeartBeatAsync() {
            return base.Channel.HeartBeatAsync();
        }
        
        public double Add(double n1, double n2) {
            return base.Channel.Add(n1, n2);
        }
        
        public System.Threading.Tasks.Task<double> AddAsync(double n1, double n2) {
            return base.Channel.AddAsync(n1, n2);
        }
        
        public double Subtract(double n1, double n2) {
            return base.Channel.Subtract(n1, n2);
        }
        
        public System.Threading.Tasks.Task<double> SubtractAsync(double n1, double n2) {
            return base.Channel.SubtractAsync(n1, n2);
        }
        
        public double Multiply(double n1, double n2) {
            return base.Channel.Multiply(n1, n2);
        }
        
        public System.Threading.Tasks.Task<double> MultiplyAsync(double n1, double n2) {
            return base.Channel.MultiplyAsync(n1, n2);
        }
        
        public double Divide(double n1, double n2) {
            return base.Channel.Divide(n1, n2);
        }
        
        public System.Threading.Tasks.Task<double> DivideAsync(double n1, double n2) {
            return base.Channel.DivideAsync(n1, n2);
        }
    }
}
